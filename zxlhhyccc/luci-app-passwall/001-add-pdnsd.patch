--- 1/Makefile	2025-08-07 22:52:11.509530000 +0800
+++ 2/Makefile	2025-08-07 22:57:42.081566940 +0800
@@ -12,10 +12,14 @@
 PKG_CONFIG_DEPENDS:= \
 	CONFIG_PACKAGE_$(PKG_NAME)_Iptables_Transparent_Proxy \
 	CONFIG_PACKAGE_$(PKG_NAME)_Nftables_Transparent_Proxy \
+	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_ChinaDNS_NG \
+	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_DNS2TCP \
+	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_DNS2SOCKS \
 	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_Geoview \
 	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_Haproxy \
 	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_Hysteria \
 	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_NaiveProxy \
+	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_PDNSD \
 	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_Shadowsocks_Libev_Client \
 	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_Shadowsocks_Libev_Server \
 	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_Shadowsocks_Rust_Client \
@@ -35,16 +39,42 @@
 LUCI_TITLE:=LuCI support for PassWall
 LUCI_PKGARCH:=all
 LUCI_DEPENDS:=+coreutils +coreutils-base64 +coreutils-nohup +curl \
-	+chinadns-ng +dns2socks +dnsmasq-full +ip-full \
-	+libuci-lua +lua +luci-compat +luci-lib-jsonc \
-	+microsocks +resolveip +tcping
+	+ip-full +libuci-lua +lua +luci-compat +luci-lib-jsonc \
+	+microsocks +resolveip +tcping +unzip \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_ChinaDNS_NG:chinadns-ng \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_DNS2TCP:dns2tcp \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_DNS2SOCKS:dns2socks \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_Haproxy:haproxy \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_Hysteria:hysteria \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_NaiveProxy:naiveproxy \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_PDNSD:pdnsd-alt \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_Shadowsocks_Libev_Client:shadowsocks-libev-ss-local \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_Shadowsocks_Libev_Client:shadowsocks-libev-ss-redir \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_Shadowsocks_Libev_Server:shadowsocks-libev-ss-server \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_Shadowsocks_Rust_Client:shadowsocks-rust-sslocal \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_Shadowsocks_Rust_Server:shadowsocks-rust-ssserver \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_ShadowsocksR_Libev_Client:shadowsocksr-libev-ssr-local \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_ShadowsocksR_Libev_Client:shadowsocksr-libev-ssr-redir \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_ShadowsocksR_Libev_Server:shadowsocksr-libev-ssr-server \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_Shadow_TLS:shadow-tls \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_Simple_Obfs:simple-obfs \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_Simple_Obfs:simple-obfs-client \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_SingBox:sing-box \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_Trojan_Plus:trojan-plus \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_tuic_client:tuic-client \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_V2ray_Geodata:v2ray-geoip \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_V2ray_Geodata:v2ray-geosite \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_V2ray_Geoview:geoview \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_V2ray_Plugin:v2ray-plugin \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_Xray:xray-core \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_Xray_Plugin:xray-plugin
 
 define Package/$(PKG_NAME)/config
 menu "Configuration"
-	depends on PACKAGE_$(PKG_NAME)
 
 config PACKAGE_$(PKG_NAME)_Iptables_Transparent_Proxy
 	bool "Iptables Transparent Proxy"
+	select PACKAGE_dnsmasq-full
 	select PACKAGE_ipset
 	select PACKAGE_ipt2socks
 	select PACKAGE_iptables
@@ -54,120 +84,115 @@
 	select PACKAGE_iptables-mod-socket
 	select PACKAGE_iptables-mod-tproxy
 	select PACKAGE_kmod-ipt-nat
+	depends on PACKAGE_$(PKG_NAME)
 	default y if ! PACKAGE_firewall4
 
 config PACKAGE_$(PKG_NAME)_Nftables_Transparent_Proxy
 	bool "Nftables Transparent Proxy"
+	select PACKAGE_dnsmasq-full
 	select PACKAGE_ipt2socks
 	select PACKAGE_nftables
 	select PACKAGE_kmod-nft-socket
 	select PACKAGE_kmod-nft-tproxy
 	select PACKAGE_kmod-nft-nat
+	depends on PACKAGE_$(PKG_NAME)
 	default y if PACKAGE_firewall4
 
+config PACKAGE_$(PKG_NAME)_INCLUDE_ChinaDNS_NG
+	bool "Include ChinaDNS-NG"
+	default y
+
+config PACKAGE_$(PKG_NAME)_INCLUDE_DNS2TCP
+	bool "Include DNS2TCP"
+	default y
+
+config PACKAGE_$(PKG_NAME)_INCLUDE_DNS2SOCKS
+	bool "Include DNS2SOCKS"
+	default y
+
 config PACKAGE_$(PKG_NAME)_INCLUDE_Geoview
 	bool "Include Geoview"
-	select PACKAGE_geoview
 	default y if aarch64||arm||i386||x86_64
 
 config PACKAGE_$(PKG_NAME)_INCLUDE_Haproxy
 	bool "Include Haproxy"
-	select PACKAGE_haproxy
 	default y if aarch64||arm||i386||x86_64
 
 config PACKAGE_$(PKG_NAME)_INCLUDE_Hysteria
 	bool "Include Hysteria"
-	select PACKAGE_hysteria
 	default n
 
 config PACKAGE_$(PKG_NAME)_INCLUDE_NaiveProxy
 	bool "Include NaiveProxy"
 	depends on !(arc||(arm&&TARGET_gemini)||armeb||mips||mips64||powerpc)
-	select PACKAGE_naiveproxy
 	default n
 
+config PACKAGE_$(PKG_NAME)_INCLUDE_PDNSD
+	bool "Include PDNSD"
+	default y
+
 config PACKAGE_$(PKG_NAME)_INCLUDE_Shadowsocks_Libev_Client
 	bool "Include Shadowsocks Libev Client"
-	select PACKAGE_shadowsocks-libev-ss-local
-	select PACKAGE_shadowsocks-libev-ss-redir
 	default y
 
 config PACKAGE_$(PKG_NAME)_INCLUDE_Shadowsocks_Libev_Server
 	bool "Include Shadowsocks Libev Server"
-	select PACKAGE_shadowsocks-libev-ss-server
 	default y if aarch64||arm||i386||x86_64
 
 config PACKAGE_$(PKG_NAME)_INCLUDE_Shadowsocks_Rust_Client
 	bool "Include Shadowsocks Rust Client"
 	depends on aarch64||arm||i386||mips||mipsel||x86_64
-	select PACKAGE_shadowsocks-rust-sslocal
 	default y if aarch64
 
 config PACKAGE_$(PKG_NAME)_INCLUDE_Shadowsocks_Rust_Server
 	bool "Include Shadowsocks Rust Server"
 	depends on aarch64||arm||i386||mips||mipsel||x86_64
-	select PACKAGE_shadowsocks-rust-ssserver
 	default n
 
 config PACKAGE_$(PKG_NAME)_INCLUDE_ShadowsocksR_Libev_Client
 	bool "Include ShadowsocksR Libev Client"
-	select PACKAGE_shadowsocksr-libev-ssr-local
-	select PACKAGE_shadowsocksr-libev-ssr-redir
 	default y
 
 config PACKAGE_$(PKG_NAME)_INCLUDE_ShadowsocksR_Libev_Server
 	bool "Include ShadowsocksR Libev Server"
-	select PACKAGE_shadowsocksr-libev-ssr-server
 	default n
 
 config PACKAGE_$(PKG_NAME)_INCLUDE_Shadow_TLS
 	bool "Include Shadow-TLS"
-	select PACKAGE_shadow-tls
 	depends on aarch64||arm||x86_64
 	default n
 
 config PACKAGE_$(PKG_NAME)_INCLUDE_Simple_Obfs
 	bool "Include Simple-Obfs (Shadowsocks Plugin)"
-	select PACKAGE_simple-obfs
-	select PACKAGE_simple-obfs-client
 	default y
 
 config PACKAGE_$(PKG_NAME)_INCLUDE_SingBox
 	bool "Include Sing-Box"
-	select PACKAGE_sing-box
 	default y if aarch64||arm||i386||x86_64
 
 config PACKAGE_$(PKG_NAME)_INCLUDE_Trojan_Plus
 	bool "Include Trojan-Plus"
-	select PACKAGE_trojan-plus
 	default y
 
 config PACKAGE_$(PKG_NAME)_INCLUDE_tuic_client
 	bool "Include tuic-client"
 	depends on aarch64||arm||i386||x86_64
-	select PACKAGE_tuic-client
 	default n
 
 config PACKAGE_$(PKG_NAME)_INCLUDE_V2ray_Geodata
 	bool "Include V2ray_Geodata"
-	select PACKAGE_v2ray-geoip
-	select PACKAGE_v2ray-geosite
 	default n
 
 config PACKAGE_$(PKG_NAME)_INCLUDE_V2ray_Plugin
 	bool "Include V2ray-Plugin (Shadowsocks Plugin)"
-	select PACKAGE_v2ray-plugin
 	default y if aarch64||arm||i386||x86_64
 
 config PACKAGE_$(PKG_NAME)_INCLUDE_Xray
 	bool "Include Xray"
-	select PACKAGE_xray-core
-	select PACKAGE_unzip
 	default y if aarch64||arm||i386||x86_64
 
 config PACKAGE_$(PKG_NAME)_INCLUDE_Xray_Plugin
 	bool "Include Xray-Plugin (Shadowsocks Plugin)"
-	select PACKAGE_xray-plugin
 	default n
 
 endmenu
diff --git a/luasrc/model/cbi/passwall/client/global.lua b/luasrc/model/cbi/passwall/client/global.lua
index 3f6dd8c..2656874 100644
--- a/luasrc/model/cbi/passwall/client/global.lua
+++ b/luasrc/model/cbi/passwall/client/global.lua
@@ -390,6 +390,14 @@ o:value("tcp", translatef("Requery DNS By %s", "TCP"))
 if chinadns_tls == 0 then
 	o:value("dot", translatef("Requery DNS By %s", "DoT"))
 end
+--dns_mode.rmempty = false
+--dns_mode:reset_values()
+if api.is_finded("dns2tcp") then
+	o:value("dns2tcp", "dns2tcp " ..translatef("Requery DNS By %s", "TCP"))
+end
+if api.is_finded("pdnsd") then
+	o:value("pdnsd", "pdnsd " .. translatef("Requery DNS By %s", translate("TCP Node")))
+end
 if api.is_finded("dns2socks") then
 	o:value("dns2socks", "dns2socks")
 end
@@ -399,6 +407,7 @@ end
 if has_xray then
 	o:value("xray", "Xray")
 end
+--o:value("udp", translatef("Requery DNS By %s", "UDP"))
 if api.is_finded("smartdns") then
 	o:depends({ dns_shunt = "smartdns",  ['!reverse'] = true })
 end
@@ -498,6 +507,8 @@ o.validate = function(self, value, t)
 	end
 	return value
 end
+o:depends({dns_mode = "dns2tcp"})
+o:depends({dns_mode = "pdnsd"})
 o:depends({dns_mode = "dns2socks"})
 
 ---- DNS Forward
@@ -512,6 +523,8 @@ o:value("9.9.9.9", "9.9.9.9 (Quad9)")
 o:value("149.112.112.112", "149.112.112.112 (Quad9)")
 o:value("208.67.220.220", "208.67.220.220 (OpenDNS)")
 o:value("208.67.222.222", "208.67.222.222 (OpenDNS)")
+o:depends({dns_mode = "dns2tcp"})
+o:depends({dns_mode = "pdnsd"})
 o:depends({dns_mode = "dns2socks"})
 o:depends({dns_mode = "tcp"})
 o:depends({dns_mode = "udp"})
@@ -581,6 +594,17 @@ o.validate = function(self, value, t)
 	return value
 end
 
+--[[
+o = s:taboption("DNS", Flag, "dns_cache", translate("Cache Resolved"))
+o.default = "1"
+o:depends({dns_mode = "dns2socks"})
+o:depends({dns_mode = "pdnsd"})
+o:depends({dns_mode = "udp"})
+o:depends({dns_mode = "sing-box", remote_fakedns = false})
+o:depends({dns_mode = "xray"})
+o.rmempty = false
+]]--
+
 o = s:taboption("DNS", ListValue, "chinadns_ng_default_tag", translate("Default DNS"))
 o.default = "none"
 o:value("gfw", translate("Remote DNS"))
diff --git a/po/zh-cn/passwall.po b/po/zh-cn/passwall.po
index 92144fb..4ae3764 100644
--- a/po/zh-cn/passwall.po
+++ b/po/zh-cn/passwall.po
@@ -172,6 +172,9 @@ msgstr "远程 DNS DoH"
 msgid "Remote DNS DoT"
 msgstr "远程 DNS DoT"
 
+#~ msgid "Cache Resolved"
+#~ msgstr "缓存解析结果"
+
 msgid "Notify the DNS server when the DNS query is notified, the location of the client (cannot be a private IP address)."
 msgstr "用于 DNS 查询时通知 DNS 服务器，客户端所在的地理位置（不能是私有 IP 地址）。"
 
@@ -316,6 +319,12 @@ msgstr "关闭（不使用）"
 msgid "Proxy Mode"
 msgstr "代理模式"
 
+msgid "TCP Proxy Mode"
+msgstr "TCP 代理模式"
+
+msgid "UDP Proxy Mode"
+msgstr "UDP 代理模式"
+
 msgid "Default Proxy Mode"
 msgstr "默认代理模式"
 
diff --git a/root/usr/share/passwall/0_default_config b/root/usr/share/passwall/0_default_config
index acacfed..1705bea 100644
--- a/root/usr/share/passwall/0_default_config
+++ b/root/usr/share/passwall/0_default_config
@@ -5,6 +5,7 @@ config global
 	option tcp_node_socks_port '1070'
 	option filter_proxy_ipv6 '1'
 	option dns_shunt 'chinadns-ng'
+	# option dns_mode 'pdnsd'
 	option dns_mode 'tcp'
 	option remote_dns '1.1.1.1'
 	list smartdns_remote_dns 'https://1.1.1.1/dns-query'
diff --git a/root/usr/share/passwall/app.sh b/root/usr/share/passwall/app.sh
index 57b989b..00fbed6 100755
--- a/root/usr/share/passwall/app.sh
+++ b/root/usr/share/passwall/app.sh
@@ -1445,6 +1445,12 @@ start_dns() {
 				echolog "  - ChinaDNS-NG(${LOCAL_DNS}) -> ${china_ng_c_dns}"
 				echolog "  * 请确保上游直连 DNS 支持 TCP 查询。"
 				NEXT_DNS_LISTEN_PORT=$(expr $NEXT_DNS_LISTEN_PORT + 1)
+			} || {
+				LOCAL_DNS="127.0.0.1#${NEXT_DNS_LISTEN_PORT}"
+				NEXT_DNS_LISTEN_PORT=$(expr $NEXT_DNS_LISTEN_PORT + 1)
+				ln_run "$(first_type dns2tcp)" dns2tcp "/dev/null" -L "${LOCAL_DNS}" -R "$(get_first_dns DIRECT_DNS 53)" -v
+				echolog "  - dns2tcp(${LOCAL_DNS}) -> tcp://$(get_first_dns DIRECT_DNS 53 | sed 's/#/:/g')"
+				echolog "  * 请确保上游直连 DNS 支持 TCP 查询。"
 			}
 		;;
 		dot)
@@ -1594,6 +1600,19 @@ start_dns() {
 			}
 		fi
 	;;
+	pdnsd)
+		UDP_PROXY_DNS=1
+		REMOTE_DNS="1.1.1.1"
+		gen_pdnsd_config "${NEXT_DNS_LISTEN_PORT}" "${REMOTE_DNS}" "${DNS_CACHE}" "${DNS_MODE}"
+		ln_run "$(first_type pdnsd)" pdnsd "/dev/null" --daemon -c "${TMP_PATH}/pdnsd/pdnsd.conf" -d
+		echolog "  - 域名解析：pdnsd + 使用(TCP节点)解析域名..."
+	;;
+	dns2tcp)
+		TCP_PROXY_DNS=1
+		REMOTE_DNS="1.1.1.1"
+		ln_run "$(first_type dns2tcp)" dns2tcp "/dev/null" -L "${TUN_DNS}" -R "$(get_first_dns REMOTE_DNS 53)" -v
+		echolog "  - dns2tcp(${TUN_DNS}) -> tcp://$(get_first_dns REMOTE_DNS 53 | sed 's/#/:/g')"
+	;;
 	udp)
 		UDP_PROXY_DNS=1
 		local china_ng_listen_port=${NEXT_DNS_LISTEN_PORT}
@@ -1603,6 +1622,11 @@ start_dns() {
 			local no_ipv6_trust="-N"
 			ln_run "$(first_type chinadns-ng)" chinadns-ng "/dev/null" -b :: -l ${china_ng_listen_port} -t ${china_ng_trust_dns} -d gfw ${no_ipv6_trust}
 			echolog "  - ChinaDNS-NG(${TUN_DNS}) -> ${china_ng_trust_dns}"
+		elif [ -f "$(first_type pdnsd)" ];then
+			REMOTE_DNS="1.1.1.1"
+			gen_pdnsd_config "${NEXT_DNS_LISTEN_PORT}" "${REMOTE_DNS}" "${DNS_CACHE}" "${DNS_MODE}"
+			ln_run "$(first_type pdnsd)" pdnsd "/dev/null" --daemon -c "${TMP_PATH}/pdnsd/pdnsd.conf" -d
+			echolog "  - 域名解析：pdnsd + 使用(UDP节点)解析域名..."
 		else
 			TUN_DNS="$(echo ${REMOTE_DNS} | sed 's/#/:/g' | sed -E 's/\:([^:]+)$/#\1/g')"
 			echolog "  - udp://${TUN_DNS}"
@@ -1616,6 +1640,12 @@ start_dns() {
 			[ "$FILTER_PROXY_IPV6" = "1" ] && DNSMASQ_FILTER_PROXY_IPV6=0 && local no_ipv6_trust="-N"
 			ln_run "$(first_type chinadns-ng)" chinadns-ng "/dev/null" -b :: -l ${china_ng_listen_port} -t ${china_ng_trust_dns} -d gfw ${no_ipv6_trust}
 			echolog "  - ChinaDNS-NG(${TUN_DNS}) -> ${china_ng_trust_dns}"
+		} || {
+			[ -f "$(first_type dns2tcp)" ] && {
+			REMOTE_DNS="1.1.1.1"
+			ln_run "$(first_type dns2tcp)" dns2tcp "/dev/null" -L "${TUN_DNS}" -R "$(get_first_dns REMOTE_DNS 53)" -v
+			echolog "  - dns2tcp(${TUN_DNS}) -> tcp://$(get_first_dns REMOTE_DNS 53 | sed 's/#/:/g')"
+			}
 		}
 	;;
 	esac
@@ -1739,6 +1767,73 @@ start_dns() {
 	fi
 }
 
+gen_pdnsd_config() {
+	local listen_port=${1}
+	local up_dns=${2}
+	local cache=${3}
+	local dns_mode=${4}
+	local pdnsd_dir=${TMP_PATH}/pdnsd
+	local perm_cache=2048
+	local _cache="on"
+	local query_method="tcp_only"
+	[ "$dns_mode" == "udp" ] && query_method="udp_only"
+
+	local reject_ipv6_dns=
+	[ "${cache}" = "0" ] && _cache="off" && perm_cache=0
+
+	mkdir -p "${pdnsd_dir}"
+	touch "${pdnsd_dir}/pdnsd.cache"
+	chown -R root.nogroup "${pdnsd_dir}"
+	if [ $PROXY_IPV6 == "0" ]; then
+		reject_ipv6_dns=$(cat <<- 'EOF'
+
+				reject = ::/0;
+				reject_policy = negate;
+		EOF
+		)
+	fi
+	cat > "${pdnsd_dir}/pdnsd.conf" <<-EOF
+		global {
+			perm_cache = $perm_cache;
+			cache_dir = "$pdnsd_dir";
+			run_as = "root";
+			server_ip = 127.0.0.1;
+			server_port = ${listen_port};
+			status_ctl = on;
+			query_method = ${query_method};
+			min_ttl = 1h;
+			max_ttl = 1w;
+			timeout = 10;
+			par_queries = 2;
+			neg_domain_pol = off;
+			udpbufsize = 1024;
+			proc_limit = 2;
+			procq_limit = 8;
+		}
+	EOF
+	echolog "  + [$?]Pdnsd (127.0.0.1:${listen_port})..."
+
+	append_pdnsd_updns() {
+		[ -z "${2}" ] && echolog "  | - 略过错误 : ${1}" && return 0
+		cat >> $pdnsd_dir/pdnsd.conf <<-EOF
+			server {
+				label = "node-${2}_${3}";
+				ip = ${2};
+				edns_query = on;
+				port = ${3};
+				timeout = 4;
+				interval = 10m;
+				uptest = none;
+				purge_cache = off;
+				proxy_only = on;
+				caching = $_cache;${reject_ipv6_dns}
+			}
+		EOF
+		echolog "  | - [$?]上游DNS：${2}:${3}"
+	}
+	hosts_foreach up_dns append_pdnsd_updns 53
+}
+
 add_ip2route() {
 	local ip=$(get_host_ip "ipv4" $1)
 	[ -z "$ip" ] && {
@@ -2251,7 +2346,8 @@ get_config() {
 	CLIENT_PROXY=$(config_t_get global client_proxy 1)
 	DNS_SHUNT=$(config_t_get global dns_shunt dnsmasq)
 	[ -z "$(first_type $DNS_SHUNT)" ] && DNS_SHUNT="dnsmasq"
-	DNS_MODE=$(config_t_get global dns_mode tcp)
+	#DNS_MODE=$(config_t_get global dns_mode tcp)
+	DNS_MODE=$(config_t_get global dns_mode pdnsd)
 	[ "$DNS_SHUNT" = "smartdns" ] && DNS_MODE=$(config_t_get global smartdns_dns_mode socks)
 	REMOTE_DNS=$(config_t_get global remote_dns 1.1.1.1:53 | sed 's/#/:/g' | sed -E 's/\:([^:]+)$/#\1/g')
 	USE_DEFAULT_DNS=$(config_t_get global use_default_dns direct)
